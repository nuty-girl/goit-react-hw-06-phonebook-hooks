{"version":3,"sources":["Components/ContactForm/ContactForm.module.css","Components/ContactForm/ContactForm.js","Components/Filter/Filter.js","Components/ContactList/ContactList.js","App.js","index.js","App.module.css","Components/Filter/Filter.module.css","Components/ContactList/ContactList.module.css"],"names":["module","exports","ContactForm","saveContact","useState","name","setName","number","setNumber","nameInputId","useRef","shortid","generate","current","numberInputId","className","styles","form","onSubmit","e","preventDefault","label","htmlFor","span","id","type","value","onChange","target","button","filterInputId","Filter","onChangeFilter","input","defaultProps","ContactList","contacts","onDeleteContact","map","key","li","onClick","contactsReducer","state","action","payload","persistedContacts","contact","filter","initialContacts","ReactDOM","render","useReducer","dispatch","useEffect","JSON","parse","localStorage","getItem","setItem","stringify","setFilter","filteredContacts","console","log","toLowerCase","includes","App","title","length","alert","document","getElementById"],"mappings":"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","file":"static/js/main.3b5a3dda.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1iVi-\",\"label\":\"ContactForm_label__19QHU\",\"span\":\"ContactForm_span__2O5o1\",\"button\":\"ContactForm_button__2IRWH\"};","import React, { useState, useRef } from 'react';\r\nimport T from 'prop-types';\r\nimport shortid from 'shortid';\r\nimport styles from './ContactForm.module.css';\r\n\r\nexport default function ContactForm({ saveContact }) {\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n\r\n  const hadleSubmit = e => {\r\n    e.preventDefault();\r\n    if (name === '' || number === '') return;\r\n\r\n    saveContact({ name, number });\r\n    setName('');\r\n    setNumber('');\r\n  };\r\n\r\n  const handleChangeName = e => {\r\n    setName(e.target.value);\r\n  };\r\n\r\n  const handleChangeNumber = e => {\r\n    setNumber(e.target.value);\r\n  };\r\n\r\n  const nameInputId = useRef(shortid.generate()).current;\r\n  const numberInputId = useRef(shortid.generate()).current;\r\n\r\n  return (\r\n    <form className={styles.form} onSubmit={hadleSubmit}>\r\n      <label className={styles.label} htmlFor={nameInputId}>\r\n        <span className={styles.span}>Name </span>\r\n        <input\r\n          id={nameInputId}\r\n          type=\"text\"\r\n          value={name}\r\n          onChange={handleChangeName}\r\n          name=\"name\"\r\n        />\r\n      </label>\r\n\r\n      <label className={styles.label} htmlFor={numberInputId}>\r\n        <span className={styles.span}>Number </span>\r\n        <input\r\n          id={numberInputId}\r\n          type=\"number\"\r\n          value={number}\r\n          onChange={handleChangeNumber}\r\n          name=\"number\"\r\n        />\r\n      </label>\r\n\r\n      <button className={styles.button} type=\"submit\">\r\n        add contact\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n\r\nContactForm.propTypes = {\r\n  saveContact: T.func.isRequired,\r\n};\r\n","import React from 'react';\r\nimport T from 'prop-types';\r\nimport shortid from 'shortid';\r\nimport styles from './Filter.module.css';\r\n\r\nconst filterInputId = shortid.generate();\r\n\r\nconst Filter = ({ value, onChangeFilter }) => (\r\n  <label htmlFor={filterInputId}>\r\n    <p className={styles.label}>Find contacts by name</p>\r\n    <input\r\n      className={styles.input}\r\n      id={filterInputId}\r\n      type=\"text\"\r\n      value={value}\r\n      onChange={onChangeFilter}\r\n    />\r\n  </label>\r\n);\r\n\r\nFilter.propTypes = {\r\n  value: T.string,\r\n  onChangeFilter: T.func.isRequired,\r\n};\r\n\r\nFilter.defaultProps = {\r\n  value: '',\r\n};\r\nexport default Filter;\r\n","import React from 'react';\r\n\r\nimport T from 'prop-types';\r\nimport styles from './ContactList.module.css';\r\n\r\nconst ContactList = ({ contacts, onDeleteContact }) => (\r\n  <ul>\r\n    {contacts.map(({ id, name, number }) => (\r\n      <li key={id} className={styles.li}>\r\n        <span>{name}: </span>\r\n        <span>{number}</span>\r\n        <button\r\n          className={styles.button}\r\n          type=\"button\"\r\n          onClick={() => onDeleteContact(id)}\r\n        >\r\n          Delete\r\n        </button>\r\n      </li>\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nContactList.propTypes = {\r\n  contacts: T.arrayOf(\r\n    T.shape({\r\n      id: T.string.isRequired,\r\n      name: T.string.isRequired,\r\n      number: T.string.isRequired,\r\n    }),\r\n  ).isRequired,\r\n  onDeleteContact: T.func.isRequired,\r\n};\r\n\r\nexport default ContactList;\r\n","import React, { useState, useEffect, useReducer } from 'react';\r\nimport shortid from 'shortid';\r\nimport ContactForm from './Components/ContactForm/ContactForm';\r\nimport Filter from './Components/Filter/Filter';\r\nimport ContactList from './Components/ContactList/ContactList';\r\nimport styles from './App.module.css';\r\n\r\nconst contactsReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'addPersistedContacts':\r\n      return [...action.payload.persistedContacts];\r\n\r\n    case 'addContact':\r\n      return [...state, action.payload.contact];\r\n\r\n    case 'deleteContact':\r\n      return state.filter(contact => contact.id !== action.payload.id);\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst initialContacts = [\r\n  { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\r\n  { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\r\n  { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\r\n  { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\r\n];\r\n\r\nexport default function App() {\r\n  const [contacts, dispatch] = useReducer(contactsReducer, initialContacts);\r\n\r\n  useEffect(() => {\r\n    const persistedContacts = JSON.parse(localStorage.getItem('contacts'));\r\n    if (!persistedContacts) return;\r\n\r\n    dispatch({ type: 'addPersistedContacts', payload: { persistedContacts } });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('contacts', JSON.stringify(contacts));\r\n  }, [contacts]);\r\n\r\n  const addContact = ({ name, number }) => {\r\n    const filteredName = contacts.filter(contact => contact.name === name);\r\n    if (filteredName.length > 0) {\r\n      alert(`${name} is already in contacts!`);\r\n      return;\r\n    }\r\n    const contact = {\r\n      id: shortid.generate(),\r\n      name,\r\n      number,\r\n    };\r\n    dispatch({ type: 'addContact', payload: { contact } });\r\n  };\r\n\r\n  const deleteContact = id => {\r\n    dispatch({ type: 'deleteContact', payload: { id } });\r\n  };\r\n\r\n  const [filter, setFilter] = useState('');\r\n\r\n  const onChangeFilter = e => setFilter(e.target.value);\r\n\r\n  const filteredContacts = contacts.filter(contact => {\r\n    console.log(contact.name.toLowerCase().includes(filter));\r\n    return contact.name.toLowerCase().includes(filter.toLowerCase());\r\n  });\r\n  console.log(contacts);\r\n\r\n  return (\r\n    <div className={styles.App}>\r\n      <h1 className={styles.title}>Phonebook</h1>\r\n      <ContactForm saveContact={addContact} />\r\n      <h2 className={styles.title}>Contacts</h2>\r\n      <Filter value={filter} onChangeFilter={onChangeFilter} />\r\n      <ContactList\r\n        contacts={filteredContacts}\r\n        onDeleteContact={deleteContact}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\n// useMemo(\r\n//   () =>\r\n//     contacts.filter(contact =>\r\n//       // contact.name.toLowerCase().includes(filter.toLowerCase()),\r\n//       // console.log(contact.name),\r\n//       contact.name.includes(filter.toLowerCase()),\r\n//     ),\r\n//   [contacts, filter],\r\n// );\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__1R0Ou\",\"title\":\"App_title__vLndb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__1WjfY\",\"input\":\"Filter_input__fPPQt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"li\":\"ContactList_li__3dijz\",\"button\":\"ContactList_button__3YsSa\"};"],"sourceRoot":""}